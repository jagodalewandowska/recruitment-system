version: '3.8'
services:
  database:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=politechnika
      - POSTGRES_DB=rekrutacjap
    ports:
      - '5432:5432'
    volumes:
      - database_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3

  frontend:
    container_name: frontend
    build: ./frontend
    working_dir: /app
    ports:
      - '3000:3000'
    stdin_open: true
    command: npm start
    volumes:
      - './frontend:/app'
      - '/app/node_modules'

  backend:
    container_name: backend
    build: ./backend
    restart: always
    networks:
      - react-spring
      - spring-mysql
    depends_on:
      - database
    volumes:
      - ./backend/target:/var/backend
     # - ./backend-0.0.1-SNAPSHOT.jar:/app.jar
    ports:
      - '8082:8082'

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend

volumes:
  database_data: {}

networks:
  react-spring: {}
  spring-mysql: {}
